{"ast":null,"code":"import React,{useState}from'react';import{Helmet}from'react-helmet';import Header from'../components/header';import LoginForm from'../components/login-form';import Registration from'../components/registration';import FooterGray from'../components/footer-gray';import'./register.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Register=()=>{const[isLoginFormVisible,setIsLoginFormVisible]=useState(true);// По умолчанию форма входа видна\n// Для переключения на форму регистрации\nconst toggleForm=()=>{setIsLoginFormVisible(!isLoginFormVisible);};return/*#__PURE__*/_jsxs(\"div\",{className:\"register-container\",children:[/*#__PURE__*/_jsxs(Helmet,{children:[/*#__PURE__*/_jsx(\"title\",{children:\"\\u0412\\u0445\\u043E\\u0434\"}),/*#__PURE__*/_jsx(\"meta\",{property:\"og:title\",content:\"\\u0412\\u0445\\u043E\\u0434\"})]}),/*#__PURE__*/_jsx(Header,{rootClassName:\"header-root-class-name\"}),/*#__PURE__*/_jsx(\"form\",{className:\"register-form\",children:/*#__PURE__*/_jsx(\"div\",{className:\"register-contact1 thq-section-padding\",children:isLoginFormVisible?/*#__PURE__*/_jsx(LoginForm,{toggleForm:toggleForm}):/*#__PURE__*/_jsx(Registration,{toggleForm:toggleForm,rootClassName:\"registration-root-class-name\"})})}),/*#__PURE__*/_jsx(FooterGray,{})]});};export default Register;","map":{"version":3,"names":["React","useState","Helmet","Header","LoginForm","Registration","FooterGray","jsx","_jsx","jsxs","_jsxs","Register","isLoginFormVisible","setIsLoginFormVisible","toggleForm","className","children","property","content","rootClassName"],"sources":["C:/Users/User/Desktop/Технологическая практика/PolySQL_true/src/views/register.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nimport { Helmet } from 'react-helmet'\r\n\r\nimport Header from '../components/header'\r\nimport LoginForm from '../components/login-form'\r\nimport Registration from '../components/registration'\r\nimport FooterGray from '../components/footer-gray'\r\nimport './register.css'\r\n\r\nconst Register = () => {\r\nconst [isLoginFormVisible, setIsLoginFormVisible] = useState(true);  // По умолчанию форма входа видна\r\n\r\n\r\n// Для переключения на форму регистрации\r\n  const toggleForm = () => {\r\n    setIsLoginFormVisible(!isLoginFormVisible);\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"register-container\">\r\n      <Helmet>\r\n        <title>Вход</title>\r\n        <meta property=\"og:title\" content=\"Вход\" />\r\n      </Helmet>\r\n      <Header rootClassName=\"header-root-class-name\"></Header>\r\n      <form className=\"register-form\">\r\n        {/* Переключение между формами */}\r\n        <div className=\"register-contact1 thq-section-padding\">\r\n          {isLoginFormVisible ? (\r\n            <LoginForm toggleForm={toggleForm} />\r\n          ) : (\r\n            <Registration toggleForm={toggleForm} rootClassName=\"registration-root-class-name\" />\r\n          )}\r\n        </div>\r\n      </form>\r\n      <FooterGray></FooterGray>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Register\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CAEvC,OAASC,MAAM,KAAQ,cAAc,CAErC,MAAO,CAAAC,MAAM,KAAM,sBAAsB,CACzC,MAAO,CAAAC,SAAS,KAAM,0BAA0B,CAChD,MAAO,CAAAC,YAAY,KAAM,4BAA4B,CACrD,MAAO,CAAAC,UAAU,KAAM,2BAA2B,CAClD,MAAO,gBAAgB,QAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEvB,KAAM,CAAAC,QAAQ,CAAGA,CAAA,GAAM,CACvB,KAAM,CAACC,kBAAkB,CAAEC,qBAAqB,CAAC,CAAGZ,QAAQ,CAAC,IAAI,CAAC,CAAG;AAGrE;AACE,KAAM,CAAAa,UAAU,CAAGA,CAAA,GAAM,CACvBD,qBAAqB,CAAC,CAACD,kBAAkB,CAAC,CAC5C,CAAC,CAGD,mBACEF,KAAA,QAAKK,SAAS,CAAC,oBAAoB,CAAAC,QAAA,eACjCN,KAAA,CAACR,MAAM,EAAAc,QAAA,eACLR,IAAA,UAAAQ,QAAA,CAAO,0BAAI,CAAO,CAAC,cACnBR,IAAA,SAAMS,QAAQ,CAAC,UAAU,CAACC,OAAO,CAAC,0BAAM,CAAE,CAAC,EACrC,CAAC,cACTV,IAAA,CAACL,MAAM,EAACgB,aAAa,CAAC,wBAAwB,CAAS,CAAC,cACxDX,IAAA,SAAMO,SAAS,CAAC,eAAe,CAAAC,QAAA,cAE7BR,IAAA,QAAKO,SAAS,CAAC,uCAAuC,CAAAC,QAAA,CACnDJ,kBAAkB,cACjBJ,IAAA,CAACJ,SAAS,EAACU,UAAU,CAAEA,UAAW,CAAE,CAAC,cAErCN,IAAA,CAACH,YAAY,EAACS,UAAU,CAAEA,UAAW,CAACK,aAAa,CAAC,8BAA8B,CAAE,CACrF,CACE,CAAC,CACF,CAAC,cACPX,IAAA,CAACF,UAAU,GAAa,CAAC,EACtB,CAAC,CAEV,CAAC,CAED,cAAe,CAAAK,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}